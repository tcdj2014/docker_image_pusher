name: Tengine-Base-Simple

on:
  workflow_dispatch:
  push:
    tags:
      - v*
    paths:
      - 'docker-images/tengine-base'
      - 'docker-images/base.conf'
      - 'docker-images/proxy.conf'
      - '.github/workflows/tengine-simple.yaml'


env:
  TENGINE_TAG: "${{ vars.TENGINE_TAG }}"
  ALIYUN_REGISTRY: "${{ vars.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ vars.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:

  build:
    name: Pull
    runs-on: ubuntu-latest
    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      # 增加可用磁盘空间
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:

          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          # 如果空间还是不够用，可以把以下开启，清理出更多空间
          # remove-android: 'true'
          # remove-codeql: 'true'
          build-mount-path: '/var/lib/docker/'

      - name: Restart docker
        run: sudo service docker restart

      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set the value
        id: step_one
        run: |
          tag=$(echo "${{ github.ref }}" | sed -e "s,.*/\(.*\),\1,")
          echo "TAG_VERSION=$tag" >> "$GITHUB_ENV"

      - name: Use the value
        id: step_two
        run: |
          printf 'TAG是%s\n' "$TAG_VERSION" # This will output TAG_VERSION

      - name: Build and push image Aliyun
        run: |
          docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY
          # 打包镜像并上传
          echo "docker build tengine"
          docker build -t $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/tengine:base-${{ env.TAG_VERSION }} -f docker-images/tengine-base .
          echo "docker push $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/tengine:base-${{ env.TAG_VERSION }}"
          docker push $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/tengine:base-${{ env.TAG_VERSION }}
          docker tag $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/tengine:base-${{ env.TAG_VERSION }} $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/tengine:base-latest
          docker push $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/tengine:base-latest